// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserValues {
  id               String         @id @unique @default(uuid())
  name             String
  password         String
  sentMessages     Message[]      @relation("SentMessages")
  receivedMessages Message[]      @relation("ReceivedMessages")
  createdAt        DateTime       @default(now())
  conversations    Conversation[] @relation("Conversations")
}

model Message {
  id             String       @id @default(uuid())
  author         UserValues   @relation("SentMessages", fields: [authorId], references: [id])
  authorId       String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  content        String
  recipient      UserValues   @relation("ReceivedMessages", fields: [recipientId], references: [id])
  recipientId    String
  Conversation   Conversation @relation("ConversationMessages", fields: [conversationId], references: [id])
  conversationId String
}

model Conversation {
  id           String       @id @unique @default(uuid())
  participants UserValues[] @relation("Conversations")
  messages     Message[]    @relation("ConversationMessages")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}
